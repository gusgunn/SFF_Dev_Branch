<apex:page showHeader="false" title="Support For Families Resource Search Page" controller="Ctrl_ResourceDBSearch" >
    <apex:slds />
    <apex:pageMessages /> 
    
    <!-- jQuery plug in for table sort my multiple columns -->
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"/>
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"/>
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/ui-lightness/jquery-ui.css" type="text/css" media="all" />
    <apex:includeScript value="{!URLFOR($Resource.jQuery_TableSort, 'jquery-latest.js')}"  />
    <apex:includeScript value="{!URLFOR($Resource.jQuery_TableSort, 'jquery.tablesorter.min.js')}"  />
    <apex:stylesheet value="{!URLFOR($Resource.jQuery_TableSort   , '/themes/blue/style.css')}"  />
    <apex:includeScript value="{!$Resource.Jquery}"/>   
    <apex:includeScript value="{!$Resource.jMaskedInput}"/> 
    <script src="jquery.js" type="text/javascript"></script>
    <script>    
        $(document).ready(function() {  
        $(".txt-mask").mask("(999) 999-9999");  }); 
    </script>
    <script type="text/javascript">
    $(document).ready(function(){
        $('#search').keyup(function(){
            searchTable($(this).val());
        });
    });
    /*@gusgunn
                Param 1:searchText
                Description: this method takes an argument and
                search records in the assigned table Id.
            */
    function searchTable(searchText)
    {
        /*get Table using its Id */
        var table = $('table[id$=tblData]');
        table.find('tr').each(function(index, row){
            var allCells = $(row).find('td');
            if(allCells.length > 0)
            {
                var found = false;
                allCells.each(function(index, td)
                              {
                                  var regExp = new RegExp(searchText, 'i');
                                  if(regExp.test($(td).text()))
                                  {
                                      found = true;
                                      return false;
                                  }
                              });
                if(found == true)$(row).show();else $(row).hide();
            }
        });
    }            
    
    document.getElementById("account-table").style.cursor = "pointer";
    </script>
    
    <apex:form >    
        <apex:pageBlock >
            <apex:outputText escape="false" style="font-weight: bold" value="ResourceDB Search Page"/><br/><br/>
            <apex:outputText escape="false" value="Fill in the Name you would like to search for and click the Search button."/>
            <apex:outputText escape="false" value=" This page does wildcard matches on Name, it ignores the Issue Type as of yet."/><br/>  
            <apex:outputText escape="false" value=" Suggested search is 'Support for Families of Children with Disabilities' or 'Test'"/><br/>  
            
            
            <apex:pageBlockSection id="account-table" columns="2">
                <apex:panelGrid columns="1" cellpadding="80"  >
                    <apex:outputLabel value="Name" />
                    <apex:inputText value="{!nameSearch}" />
                    
                    <apex:outputLabel value="Description" />
                    <apex:inputText value="{!description}" size="40" />
                    <apex:outputLabel value="Program Description" />
                    <apex:inputText value="{!programDescription}" />          
                    <apex:outputLabel value="Zip Code" />
                    <apex:inputText value="{!zipcode}" size="10" />
                    
                    <label class="slds-form-element__label" for="category">Category</label>
                    <div class="slds-form-element__control">
                        <!-- Search categories doesnt work when we allow user to select multiple issues at same time -->
                        <apex:selectList multiselect="false" size="5" styleClass="slds-select" id="category" onchange="setCategory(this.value);"
                                         value="{!category}" >
                            <apex:selectOptions value="{!IssueTypes}" /> 
                        </apex:selectlist>
                     </div>
                    
                <!---  I think there is something wrong with the termination of the select list (above and copied below too)
                        based on color hilighiting in dev console.  When I add in a second control to selecting the 
                        Conditions, the results display gets all messed up.

                    <label class="slds-form-element__label" for="condition">Conditions</label>
                    <div class="slds-form-element__control">
                        <apex:selectList multiselect="false" size="5" styleClass="slds-select" id="condition" onchange="setCondition(this.value);"
                                         value="{!condition}" >
                            <apex:selectOptions value="{!Conditions}" /> 
                        </apex:selectlist>
                    </div>
 -->               
                </apex:panelGrid>
            </apex:pageBlockSection>
          
            <apex:pageblock >
                <apex:pageBlockButtons location="top">
                    <apex:commandButton value="Search" action="{!searchResources}" reRender="account-table,resource-results"/>
                    
                </apex:pageBlockButtons>
                <apex:pageBlockSection columns="1">
<!-- debug statement about what was searched and how many results -->
 <apex:outputText escape="false" style="font-weight: bold" value="Hit Search to update the results"/>
<apex:outputText id="debug-text" value="{0} resources have a name which is a wildcard match for ({1}) AND Category is {2}">
<apex:param value="{!accounts.size}"/>
<apex:param value="{!nameSearch}"/>
<apex:param value="{!category}"/> 
</apex:outputText> 
                    <br/>
                    
                    
                    <!-- this is the list of results, linking to a results page -->
                    <apex:pageBlockTable columns="4" id="resource-results" value="{!accounts}" var="a">
                        <apex:column >
                            <apex:facet name="header">Name</apex:facet>
                            <a href="/{!a.Id}"  onclick="window.open(this.href, 'mywin', 'height=400,width=1100'); return false;"> {!a.Name}</a> 
                            <!-- <a href="\UnderConstruction" onclick="popupWindow('{!a.Id}'); return false">{!a.Name}</a> -->
                        </apex:column>
                        
                        <apex:column >
                            <apex:facet name="header">Phone</apex:facet>
                            {!a.Phone}
                        </apex:column>
                        
                        <apex:column >
                            <apex:facet name="header">Website</apex:facet>
                            {!a.Website}
                        </apex:column>
                        
                        <apex:column >
                            <apex:facet name="header">Categories</apex:facet>
                            {!a.Issue_Type__c}
                        </apex:column>
                        
                    </apex:pageBlockTable>
                </apex:pageBlockSection>
                
                <!--          <apex:pageblocksection columns="1" title="info">

<apex:repeat value="{!$ObjectType.Account.FieldSets.    ResourceContact}" var="i">

<apex:inputfield value="{!Account[i]}" />


</apex:repeat>

</apex:pageblocksection>
<apex:pageblocksection columns="1" title="info">

<apex:repeat value="{!$ObjectType.Account.FieldSets.    ResourceAddress}" var="i">

<apex:inputfield value="{!Account[i]}" />


</apex:repeat> -->
                
                <!-- Under Construction -->
                <apex:outputText escape="false"  value=" ResourceDB Search Page"/>
                <apex:outputText escape="false" styleClass="title" value="{!$Label.site.under_construction}">
                    <apex:param value="{!$Site.BaseUrl}"/>
                </apex:outputText>
                <apex:outputText escape="false" value=" {!$Label.site.get_in_touch}">
                    <apex:param value="mailto:{!$Site.AdminEmailAddress}"/>
                    <apex:param value="{!$Label.site.email_us}"/>
                </apex:outputText>  
            </apex:pageblock>
        </apex:pageBlock>
        
    </apex:form>
    
    
</apex:page>