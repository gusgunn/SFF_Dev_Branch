<apex:page controller="ManageIssuesController" showHeader="false"  sidebar="fals" id="page" standardStylesheets="false">
<head>
    <apex:includeScript value="{!URLFOR($Resource.JSResources,'/js/jquery.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.JSResources,'/js/angular.min.js')}"/>    
    <apex:stylesheet value="{!URLFOR($Resource.JSResources,'/css/pure.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.JSResources,'/css/site.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.JSResources,'/css/cssflow.button.strip.css')}"></apex:stylesheet>
    <script type="text/javascript" language="javascript" src="{!URLFOR($Resource.TagCloud, 'js/jquery.blockUI.js')}"></script>
    
    <meta name="viewport" content="width=device-width, initial-scale=0.8, maximum-scale=1.5, user-scalable=no"/>
    
    <style type="text/css">
   
    .wrapper
    {
     color: #777 !important;
     font-size: 140% !important;  
    }
    .btndisplay
    {
        width: 100%;
    }
    .tag-contents 
    {
        max-width: 100%;
    }
    </style>
   
    <script type="text/javascript">
        BlockUIConfig = { 
               message: '<img style="height: 40px; width: 40px;" src="{!URLFOR($Resource.JSResources, '/images/spinner.gif')}"/>', 
               fadeIn: 700, 
               fadeOut: 700,
               showOverlay: true, 
               centerY: false, 
               css: { 
                   width: '50px', 
                   top: '50%', 
                   left: '50%', 
                   right: '', 
                   border: 'none', 
                   padding: '5px', 
                   backgroundColor: '#fff',
                   '-webkit-border-radius': '10px', 
                   '-moz-border-radius': '10px', 
                   opacity: .6, 
                   color: '#fff' 
                } 
        };
        
        function setCookie(cname,cvalue,exdays)
        {
            var d = new Date();
            d.setTime(d.getTime()+(exdays*24*60*60*1000));
            var expires = "expires="+d.toGMTString();
            document.cookie = cname + "=" + cvalue + "; " + expires;
        }
        
        function getCookie(cname)
        {
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for(var i=0; i<ca.length; i++) 
              {
              var c = ca[i].trim();
              if (c.indexOf(name)==0) return c.substring(name.length,c.length);
            }
            return "";
        }
        
        function delCookie()
        {
            var expires = "expires=Thu, 01 Jan 1970 00:00:00 GMT";  
            
            var ca = document.cookie.split(';');
            for(var i=0; i<ca.length; i++) 
              {
              var c = ca[i].trim();
              if (c.substring(0,3) == 'mi_')
              {
                document.cookie = c + "=" +"; " + expires;
              }
            }
            
        }
        
        var issueApp = angular.module('issueApp', []);
        issueApp.controller('issueAppController', function($scope)
        {
            $scope.AvailableIssueOnInteraction = [];
            $scope.SelectedIssues = [];
            $scope.DeleteIds = [];
            $scope.MapWithDeletedId = [];
            $scope.SelectedIssueOnInteraction = [];            
             
            $scope.IsElementPresent = function (arrObj, obj)
            {
                 for (iIndex = 0; iIndex < arrObj.length; iIndex++)
                 {
                     if(obj.Id == arrObj[iIndex].Id)
                         return iIndex;
                 }
                 return -1;
            }
            
            $scope.SetSelectedIssue = function(SelectedIssue)
            {
                    SelectedIssue.activeClass = (SelectedIssue.activeClass === 'selected') ? '' : 'selected';
                    $scope.SelectedIssueOnInteraction.push({ Id: SelectedIssue.Id, value: SelectedIssue.value});
                    $scope.SelectedIssues.push(SelectedIssue.Id);
                    var iIndex = $scope.IsElementPresent($scope.AvailableIssueOnInteraction, SelectedIssue);
                    
                    $scope.AvailableIssueOnInteraction.splice(iIndex,1);                
                    var iDeletedIdIndex = $scope.IsElementPresent($scope.MapWithDeletedId, SelectedIssue);                      
                    $scope.MapWithDeletedId.splice(iDeletedIdIndex,1);
                    $scope.DeleteIds.splice(iDeletedIdIndex,1);
            };
            
            $scope.RemoveIssue = function(RemoveIssue)
            {
                    var iIndex = $scope.IsElementPresent($scope.SelectedIssueOnInteraction, RemoveIssue);                       
                    $scope.SelectedIssueOnInteraction.splice(iIndex,1);
                    $scope.SelectedIssues.splice(iIndex,1);                     
                    $scope.MapWithDeletedId.push({ Id: RemoveIssue.Id, value: RemoveIssue.value});
                    $scope.DeleteIds.push(RemoveIssue.Id);
                    $scope.AvailableIssueOnInteraction.push({ Id: RemoveIssue.Id, value: RemoveIssue.value});
            };
               
            $scope.AddRelatedIssue = function()
            {            
                var interaction = '{!InteractionId}';
                if($scope.SelectedIssues.length > 0 || $scope.DeleteIds.length > 0)
                {    $.blockUI(BlockUIConfig);
                     Visualforce.remoting.Manager.invokeAction('ManageIssuesController.CreateRelatedIssueSave',$scope.SelectedIssues,$scope.DeleteIds,interaction, function (result, event) {
                         $.unblockUI();
                         delCookie();
                         window.location = "/"+interaction;
                     });
                 }else{
                    delCookie();
                    window.location = "/"+interaction;
                 }
            };
            
            $scope.Cancel = function()
            {
                delCookie();
                var interaction = '{!InteractionId}';
                window.location = "/"+interaction;
            };
            
            $scope.AddIssue = function()
            {
                var IssueURL = document.getElementById('hdnCreateIssueURL').value;
                window.location = IssueURL;
            };
            
            <apex:repeat value="{!IssueOnInteraction}" var="object">
                var interactionLogId = '{!object.Interaction_Log__c}';
                var newid = GetQueryStringParams("newid");
                if(newid != undefined)
                {
                    setCookie('mi_'+newid, newid, 1);
                }
                
                var cCookie = '{!object.Id}'.substring(0,15);
                if((interactionLogId.substring(0,15) == '{!InteractionId}' || interactionLogId == '{!InteractionId}') && (getCookie('mi_'+cCookie) != ""))
                { 
                        $scope.SelectedIssueOnInteraction.push({ Id: '{!object.Id}', value:  '{!object.Name}'});
                        $scope.SelectedIssues.push('{!object.Id}');
                }else
                {
                    $scope.AvailableIssueOnInteraction.push({ Id: '{!object.Id}', value:  '{!object.Name}' });
                }
            </apex:repeat>
            
            // Remove from Available Issues
            // Add to Selected              
            <apex:repeat value="{!RelatedIssuesOnInteraction}" var="obj">
                var RelIssueId ='{!obj.Issue__c}';
                var obj = {Id: RelIssueId};
                var iIndex = $scope.IsElementPresent($scope.AvailableIssueOnInteraction, obj);       
                if(iIndex != -1)
                {    
                    $scope.AvailableIssueOnInteraction.splice(iIndex,1);
                }
                
                var sIndex = $scope.IsElementPresent($scope.SelectedIssueOnInteraction, obj);
                if( sIndex == -1)
                {
                    $scope.SelectedIssueOnInteraction.push({Id: '{!obj.Issue__c}', value: '{!obj.Issue__r.Type_of_Issue__c}', RelIssueIdIssue: '{!obj.Id}'});
                }
            </apex:repeat>                   
      });
            
     function GetQueryStringParams(sParam)
     {
        var sPageURL = window.location.search.substring(1);
        var sURLVariables = sPageURL.split('&');            
        for (var i = 0; i < sURLVariables.length; i++)          
        {
                var sParameterName = sURLVariables[i].split('=');           
                if (sParameterName[0] == sParam)            
                {
                    return sParameterName[1];
                }
        }
     }
    </script>  
</head>

<body ng-app="issueApp" ng-controller="issueAppController">
<div class="wrapper">
    <input type="hidden" value="{!InteractionId}" id="hdnInteractionId"></input>
    <input type="hidden" value="{!CreateIssueURL}" id="hdnCreateIssueURL" />
   
    <div class="issueComponents">
        <button type="button" class="custom-bttn" ng-click="AddIssue()">Add Issue</button>
        <div id="issueTags" class="tag-contents">
            <label >Available Issues</label>
            <ul>
                <li ng-repeat="s in AvailableIssueOnInteraction" class="multiselect-tags {{s.activeClass}}" ng-click="SetSelectedIssue(s)">
                    {{s.value}}
                </li>
            </ul>
        </div>
        <div id="myIssueTags" class="tag-contents">
            <label >Selected Issues</label>
            <ul>
                <li ng-repeat="issue in SelectedIssueOnInteraction" class="multiselect-tags {{issue.activeClass}} selected">{{issue.value}}
                <div class="removeIssue"><a id="removeIssuelink" ng-click="RemoveIssue(issue)">&nbsp;</a></div>
                </li>
            </ul>
        </div>
        <div>
        <table class="btndisplay">
            <tr>
                <td>
                    <button type="button" class="custom-bttn" ng-click="AddRelatedIssue()" style="float:right;">Save</button>
                </td>
                <td>
                    <button type="button" class="custom-bttn" ng-click="Cancel()" style="float:left;">Cancel</button>
                </td>
            </tr>
        </table>
        </div>
    </div>
</div>
 </body>   
</apex:page>