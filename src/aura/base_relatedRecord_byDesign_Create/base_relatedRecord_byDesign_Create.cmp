<!-- relatedRecord_byDesign -->
<aura:component implements="force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasSObjectName,force:hasRecordId,force:lightningQuickAction,lightning:actionOverride,force:lightningQuickAction"
                			access="global" >
    
    <!-- fields to accept input from Design resource -->
    <aura:attribute name="relatedId" type="String"  />
    <aura:attribute name="sObjectName" type="String"  default ="Contact"/>
    <aura:attribute name="fieldsToDisplay" type="String" default ="Id"/>
    <aura:attribute name="title" type="String" />
    <aura:attribute name="layoutType" type="String" default="Custom" />
    <aura:attribute name="numberOfColumns" type="String" default="1" />
    <aura:attribute name="mode" type="String" />
    <aura:attribute name="show" type="boolean" default = "true" />
    
    <!-- attribute to set concatonated v.record + related 
  - lets dataservice find the selected lookup's API name (String)
          by prefixing the sObjectName to it with dot notation-->
    <aura:attribute name="related" type="String" default =""/>
    
    <!-- dataservice fields -->
    <aura:attribute name="record" type="Object" />
    <aura:attribute name="recordError" type="String" />
    <aura:handler event="c:recordChange" action="{!c.onDoneloading}"/>
    <force:recordData aura:id ="service"
                      layoutType="FULL"
                      recordId="{!v.recordId}"
                      targetFields="{!v.record}"
                      targetError="{!v.recordError}"
                      recordUpdated="{!c.recordUpdate}" />
    
    <c:base_relatedRecordForm_byDesign_Create 
                                              aura:id ="createNew"
                                              relatedId ="{!v.related}" 
                                  sObjectName="{!v.sObjectName}"/> 
    
    <!-- Display Lightning Data Service errors, if any -->
    <aura:if isTrue="{!not(empty(v.recordError))}">
        <div class="recordError">
            {!v.recordError}</div>
    </aura:if>  
    
    <!--  Below: the v.related gets the lookup field's API name. The controller 
          concatonates it into v.relatedId, so it can be passed into the recordForm -->
    
    <aura:if isTrue="{!v.show}">
        <lightning:input aura:id="r" name="v.record" label=""  value="{!v.related}"/>   
    </aura:if>
    <!--   there is undoubtedly a better way to do that -->  
    
</aura:component>